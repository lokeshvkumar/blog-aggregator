<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Added as part of step 47 for prociding prod and dev support -->
	
	<jdbc:embedded-database id="dataSource" type="HSQL"></jdbc:embedded-database> 
	
	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- packagesToScan is a new addition to properties, to allow adding entity 
			package to scan -->
		<property name="packagesToScan" value="us.jblog.aggregator.entity" />
		<!-- 15 -->
		<!-- jpa properties needs to be added to the EMF -->
		<property name="jpaProperties">
			<props>
				<!-- only enabled in dev scenarios -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- if not using embedded database, then dialect is a must -->
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
				<!-- only enabled as create in dev scenarios, prod will have update, 
					this create whole database defined under packages to scan. Once done, add 
					some entities under package defined above. -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<!-- If the below property is not defined then the following exception 
			gets thrown by the application "org.springframework.beans.factory.BeanCreationException: 
			Error creating bean with name 'myEmf' defined in ServletContext resource 
			[/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested 
			exception is java.lang.IllegalArgumentException: No PersistenceProvider specified 
			in EntityManagerFactory configuration, and chosen PersistenceUnitInfo does 
			not specify a provider class name either" -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
		<!-- successfull exectuion will show the entity that got created. As shown 
			below - Hibernate: drop table User if exists Hibernate: create table User 
			(id integer generated by default as identity (start with 1), primary key 
			(id)) -->
	</bean>
</beans>
